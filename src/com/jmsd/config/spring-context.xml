<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"  
	default-autowire="byName" default-lazy-init="false">
<!-- 	<context:property-placeholder location="classpath:com/jmsd/config/db.properties" /> -->
	<aop:aspectj-autoproxy/>

	<!-- 数据源配置 -->  
	<bean id="parentDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"></bean>
	<bean id="ds1" parent="parentDataSource">  
	    <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
	    <property name="url" value="jdbc:mysql://127.0.0.1:3306/student" />  
	    <property name="username" value="root" />  
	    <property name="password" value="root" />  
	</bean>  
	  
	<bean id="ds2" parent="parentDataSource">  
	    <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
	    <property name="url" value="jdbc:mysql://127.0.0.1:3306/teacher" />  
	    <property name="username" value="root" />  
	    <property name="password" value="root" />  
	</bean> 
	
	<bean id="dataSource" class="com.jmsd.mybatis.DynamicDataSource">  
	    <property name="targetDataSources">  
	        <map key-type="java.lang.String">  
	            <entry value-ref="ds1" key="ds1Key"></entry>  
	            <entry value-ref="ds2" key="ds2Key"></entry>  
	        </map>  
	    </property>  
	    <property name="defaultTargetDataSource" ref="ds1"></property>      <!-- 默认使用ds1的数据源 -->
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务拦截的类及方法 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="do*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.jmsd.*.service.impl.*.*(..))" advice-ref="txAdvice" />
	</aop:config>
	
	<bean id="pageConfig" class="org.mybatis.pagination.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dbms">MYSQL</prop>
                <prop key="sqlRegex">.*ByPage.*</prop>
            </props>
        </property>
    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- MyBatis 配置文件   别名等 -->
	    <property name="configLocation" value="classpath:com/jmsd/config/mybatis-config.xml"></property>
		<!--dataSource属性指定要用到的连接池--> 
        <property name="dataSource" ref="dataSource"/>
        <!--configLocation属性指定mybatis的核心配置文件--> 
		<property name="mapperLocations" value="classpath*:com/jmsd/*/pojo/mapper/*-Mapper.xml" />
		<property name="plugins">
            <list>
                <ref bean="pageConfig"/>
            </list>
        </property>
    </bean>

    <!-- 
    	mybatis.spring自动映射 
    	basePackage 属性是让你为映射器接口文件设置基本的包路径。
    	 你可以使用分号或逗号 作为分隔符设置多于一个的包路径。每个映射器将会在指定的包路径中递归地被搜索到。
    -->
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--         <property name="basePackage" value="com.jmsd.student.mapper,com.jmsd.teacher.mapper"/> -->
		<property name="basePackage" value="com.jmsd.*.mapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    
	
	<!-- myBatis配置 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		dataSource属性指定要用到的连接池
		<property name="dataSource" ref="dataSource" />
		configLocation属性指定mybatis的核心配置文件
		<property name="configLocation" value="classpath:com/jmsd/config/Configuration.xml" />
		所有配置的mapper文件 
		 **表示可以表示任意多级目录，如：下述配置可以查到【com/jmsd/pojo/system/dao/UserDaoMapper.xml】
         *表示多个任意字符
     	<property name="mapperLocations" value="classpath*:com/jmsd/pojo/**/*.xml" />
	</bean>
	basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔
	<bean id="mybatisConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="basePackage" value="com.jmsd" />     
	</bean>
	-->
	
	
</beans> 